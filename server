#!/usr/bin/env nodejs

/**
 * Configuration
 */
var files = {
  "apps4X" : "examples/a4eulocal.ttl",
//"yourown" : "pathto.ttl"  
};
/*****************************************************************************/
var express = require('express'),
    fs = require("fs"),
    n3 = require('n3'),
    owl2html = require('./lib/owl2html.js');

var server = express();

/**
 * Get all triples
 */
function getTriples(file, callback){
  var turtleStream = fs.createReadStream(file);
  var parser = n3.StreamParser();
  var triples = [];
  turtleStream.pipe(parser);
  parser.on("data", function (triple) {
    triples.push(triple);
  }).on("end", function () { 
    callback(triples);
  });
}

server.use("/ns/assets",express.static(process.cwd() + '/public'));

server.get('/ns/', function (req,res) {
  var fullURL = req.protocol + "://" + req.get('host') + req.url + "/";
  var links = [];
  for (var key in files) {
    links.push(fullURL + key);
  }
  res.send(links);
});

/**
 * Respond with all triples
 */
server.get('/ns/:name/?', function (req, res) {
  var name = req.route.params.name;
  //check if name exists on the directory
  fs.exists(name, function(exists) {
    if (!exists) {
      //handle file through nodejs
      if (typeof files[name]  !== 'undefined') {
        var file = files[name];
        var format = req.accepts('text/html','application/ttl','application/json');
        if ( format === "text/html" ) {
          getTriples(file, function(triples){
            res.send(owl2html(triples));
          });
        } else if ( format === "application/ttl" ) {
          var turtleStream = fs.createReadStream(file);
          res.download(file, name + ".ttl");
        } else if ( format === "application/json" ) {
          getTriples(file, function(triples){
            res.send(triples);
          });
        } else {
          res.status(406).send("Not acceptable. We do accept: text/html, application/ttl and application/json");
        }
      } else {
        res.status(404).send("Nothing here");
      }
    } else {
      //handle file through file instead
      res.download(name);
    }
  });
  
});

/**
 * Quick fix for deeper URIs - this should be smarter though...
 */
server.get('/ns/:name/*',function (req, res) {
  var name = req.route.params.name;
  var url = req.protocol + "://" + req.get('host') + "/ns/" + name;
  res.redirect(303,url);
});

server.listen(8080, function() {
  console.log('Server listening at http://localhost:8080');
});
